#+TITLE: Justin's Emacs Org-init File
#+PROPERTY: header-args:emacs-lisp :tangle ./init.el :mkdirp yes

* Package Management Setup
** Package Archives
#+BEGIN_SRC emacs-lisp
  (require 'package)

  (setq package-archives '(("melpa" . "https://melpa.org/packages/")
                           ("org" . "https://orgmode.org/elpa/")
                           ("elpa" . "https://elpa.gnu.org/packages/")))

  (add-to-list 'load-path "~/.emacs.d/site-lisp/")

  ; Activate all the packages.
  (package-initialize)

  ; Fetch the list of available packages. 
  (unless package-archive-contents
    (package-refresh-contents))

  ; Initialize use-package on non-Linux platforms.
  (unless (package-installed-p 'use-package)
    (package-install 'use-package))
#+END_SRC

** Required Packages
#+BEGIN_SRC emacs-lisp
              ;; List required packages.
              (setq package-list
                    '(python-environment
                      move-text
                      flyspell-correct
                      deferred
                      epc 
                      flycheck
                      ctable
                      jedi
                      concurrent
                      company
                      cyberpunk-theme
                      elpy 
                      yasnippet
                      pyvenv
                      highlight-indentation
                      find-file-in-project 
                      sql-indent
                      sql
                      exec-path-from-shell
                      iedit
                      projectile
                      auctex
                      auto-complete
                      popup
                      let-alist
                      magit
                      minimap
                      popup
                      rust-mode
                      python-mode
                      doom-themes
            	      compat
          	      cond-let
                      llama
      	              seq
    	              transient
  	            with-editor))

              ;; Install any missing packages.
              (dolist (package package-list)
                (unless (package-installed-p package)
                  (package-install package)))  
#+END_SRC

* Personal Preferences
** Basic UI Configuration
#+BEGIN_SRC emacs-lisp
  (setq inhibit-startup-message t)

  (tool-bar-mode -1)         			 ; Disable the toolbar.
  (tooltip-mode -1)          			 ; Disable tooltips.
  (set-fringe-mode 10)       			 ; Give some breathing room.
  (menu-bar-mode -1)         			 ; Disable the menu bar.

  ;; Allow scrolling.
  (put 'scroll-left 'disabled nil)

  ;; Score one line at a time.
  (setq mouse-wheel-scroll-amount '(1 ((shift) . 1) ((control) . nil)))

  (setq visible-bell t)      			 ; Set up the visible bell.

  (column-number-mode)
  (global-display-line-numbers-mode t)		 ; Set up global column mode.

  ;; Disable line numbers for some modes.
  (dolist (mode '(term-mode-hook
                  shell-mode-hook
                  eshell-mode-hook))
    (add-hook mode (lambda () (display-line-numbers-mode 0))))
#+END_SRC

** Keyboard Configuration
#+BEGIN_SRC emacs-lisp
  ;; Make ESC quit prompts.
  (global-set-key (kbd "<escape>") 'keyboard-escape-quit)
#+END_SRC

** Package Preferences
*** Doom Themes
#+BEGIN_SRC emacs-lisp
(use-package doom-themes
  :ensure t
  :custom

  ;; Global settings (defaults).
  (doom-themes-enable-bold t)   ; if nil, bold is universally disabled
  (doom-themes-enable-italic t) ; if nil, italics is universally disabled

  ;; For treemacs users.
  (doom-themes-treemacs-theme "doom-atom") ; use "doom-colors" for less minimal icon theme

  :config
  (load-theme 'doom-bluloco-dark t)

  ;; Enable flashing mode-line on errors.
  (doom-themes-visual-bell-config)

  ;; Enable custom neotree theme (nerd-icons must be installed!)
  (doom-themes-neotree-config)

  ;; or for treemacs users.
  (doom-themes-treemacs-config)

  ;; Corrects (and improves) org-mode's native fontification.
  (doom-themes-org-config))
#+END_SRC

*** Flyspell
#+BEGIN_SRC emacs-lisp
  (use-package flyspell
    :custom
    (ispell-program-name "aspell")
    ;; Default dictionary. To change do M-x ispell-change-dictionary RET.
    (aspell-dictionary "en_GB-ise-wo_accents")
    (aspell-program-name "/usr/bin/aspell")
    (ispell-dictionary "en_GB-ise-wo_accents")
    (ispell-program-name "/usr/bin/aspell")
    :config
    (define-key flyspell-mode-map [down-mouse-3] 'flyspell-correct-word)
    (add-hook 'org-mode-hook 'flyspell-mode)
    ;; Enable Flyspell mode for TeX modes such as AUCTeX. Highlights all misspelled words.
    (add-hook 'TeX-mode-hook 'flyspell-mode)
    ;; Enable Flyspell program mode for emacs lisp mode, which highlights all misspelled words in comments and strings.
    (add-hook 'emacs-lisp-mode-hook 'flyspell-prog-mode))

  (use-package flyspell-correct
    :bind ("C-;" . flyspell-correct-wrapper))
#+END_SRC

*** LaTeX
